version: "3.3"


networks:
  web:
    external: true

volumes:
  portainer_data:

services:
  node-exporter:
    image: "quay.io/prometheus/node-exporter"
    pid: host
    restart: always
    volumes:
      - "/:/host:ro,rslave"
    command:
      - "--path.rootfs=/host"
      - "--web.telemetry-path=/host-metrics"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.node_exporter.rule=Host(`${DOMAIN}`) && PathPrefix(`/host-metrics`)"
      - "traefik.http.routers.node_exporter.entrypoints=websecure"
      - "traefik.http.routers.node_exporter.tls.certresolver=myresolver"
      - "traefik.http.routers.node_exporter.middlewares=dashboard-auth@file"
      - "traefik.http.services.node_exporter.loadbalancer.server.port=9100"
    networks:
      - web

  sqlite-web-staging:
    image: "coleifer/sqlite-web"
    restart: always
    volumes:
      - "/var/randovania/staging/data:/data"
    environment:
      SQLITE_DATABASE: data.db
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.sqlite_web_staging.rule=Host(`${DOMAIN}`) && PathPrefix(`/sqlite-web/staging`)"
      - "traefik.http.routers.sqlite_web_staging.entrypoints=websecure"
      - "traefik.http.routers.sqlite_web_staging.tls.certresolver=myresolver"
      - "traefik.http.routers.sqlite_web_staging.middlewares=dashboard-auth@file"
      - "traefik.http.services.sqlite_web_staging.loadbalancer.server.port=8080"
    networks:
      - web

  sqlite-web-production:
    image: "coleifer/sqlite-web"
    restart: always
    volumes:
      - "/var/randovania/production/data:/data"
    environment:
      SQLITE_DATABASE: data.db
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.sqlite_web_production.rule=Host(`${DOMAIN}`) && PathPrefix(`/sqlite-web/production`)"
      - "traefik.http.routers.sqlite_web_production.entrypoints=websecure"
      - "traefik.http.routers.sqlite_web_production.tls.certresolver=myresolver"
      - "traefik.http.routers.sqlite_web_production.middlewares=dashboard-auth@file"
      - "traefik.http.services.sqlite_web_production.loadbalancer.server.port=8080"
    networks:
      - web

  portainer:
    image: portainer/portainer-ce:2.1.1
    command: -H unix:///var/run/docker.sock
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    labels:
      # Frontend
      - "traefik.enable=true"
      - "traefik.http.routers.portainer.rule=Host(`${PORTAINER_DOMAIN}`)"
      - "traefik.http.routers.portainer.entrypoints=websecure"
      - "traefik.http.routers.portainer.tls.certresolver=myresolver"
      - "traefik.http.services.portainer.loadbalancer.server.port=9000"

    networks:
      - web

  traefik:
    image: "traefik:v2.4"
    container_name: "traefik"
    command:
      - "--accesslog=true"
      - "--log.level=INFO"
      - "--api=true"
      - "--api.dashboard=true"
      - "--metrics.prometheus.manualrouting=true"
      - "--global.sendAnonymousUsage"
      - "--providers.file.directory=/file-providers"
      - "--providers.file.watch=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.httpchallenge=true"
      - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.myresolver.acme.email=${LETSENCRYPT_EMAIL}"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "./file-providers:/file-providers"
      - "/var/letsencrypt:/letsencrypt"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    environment:
      - DASHBOARD_PASSWORD
    networks:
      - web
    restart: always
